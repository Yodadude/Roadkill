@model SettingsSummary
@{
	Layout = "~/Views/Install/Layout.cshtml";
}
<script type="text/javascript">
$(document).ready(function()
{
	setPage(2);
	$("form").validationEngine();

	$("#testdbconnection").click(function()
	{	
		$("#db-loading").show();
		hideAlerts();
		$.get("@(Url.Action("TestDatabaseConnection"))",
				{ 
					"connectionString" : $("#ConnectionString").val(),
					"databaseType" : $("#DatabaseType").val()
				 },
				function(data)
				{
					$("#db-loading").hide();
					if (data.Success)
					{
						showSuccess("#connectionsuccess");
					}
					else
					{
						showFailure("#connectionfailure",data.ErrorMessage);
					}
				});
	});
});
</script>

<p>Below are some required settings for Roadkill to work correctly. You can change these later via the settings page as an admin.</p>

@using (Html.BeginForm("Step3","Install"))
{
	<fieldset>
		<legend><span>Site name</span></legend>
		<label class="textbox">
			The name of the wiki, which appears on certain themes and in signup emails (if enabled).
		</label>

		<div class="textbox">@(Html.TextBoxFor<SettingsSummary, string>(s => s.SiteName, new { @class = "validate[required]" }))</div>
	</fieldset>
	<br />
	
	<fieldset>
		<legend><span>Site url</span></legend>
		<label class="textbox">
			The full url of the wiki, which appears in signup and reset passwords emails (if enabled). Do not include the trailing slash.
		</label>

		<div class="textbox">@(Html.TextBoxFor<SettingsSummary, string>(s => s.SiteUrl, new { @class = "validate[required]" }))</div>
	</fieldset>
	<br />
	
	<fieldset>
		<legend><span>Database connection string</span></legend>
		<label>
			You will need to create the database first if you are using a named instance. Below are a few examples, use
			the second option is you are using shared hosting without any SQL Server hosting.
		</label>
		<br />
		<h2>Example connection strings</h2>
		<div class="small">
			<ol>
				<li>
					<b>SQL Server Express:</b><br />
					<span class="example">database=roadkill;server=.\SQLEXPRESS;integrated security=SSPI</span></li>
				<li>
					<b>SQL Server App_Data file-based:</b><br />
					<span class="example">Server=.\SQLExpress;AttachDbFilename=|DataDirectory|\roadkill.mdf;Integrated Security=True;User Instance=True</span>
				</li>
				<li>
					<b>SQLite (stored in the App_Data folder):</b><br />
					<span class="example">Data Source=|DataDirectory|\roadkill.sqlite;</span>
					The SQLite drivers that come with Roadkill are for the 64 bit .NET framework. The 32 bit drivers are available as a seperate download.
				</li>
				<li style="margin-top:10px">
					<b>SQL Server Compact:</b><br />
					<span class="example">Data Source=|DataDirectory|\roadkill.sdf;</span>
					<a href="http://www.microsoft.com/downloads/en/details.aspx?FamilyID=033cfb76-5382-44fb-bc7e-b3c8174832e2" target="_blank">Download the binaries for x64 and x86 from here</a>.
				</li>
				
			</ol>
			
			<h3>Database type:</h3>
			@Html.DropDownBoxForDatabaseType()

			<div class="textbox">@(Html.TextBoxFor<SettingsSummary, string>(s => s.ConnectionString, new { @class = "validate[required]" }))</div>
			<input id="testdbconnection" class="button" type="button" value="Test" />

			<div id="db-loading" class="hidden"><img src="@(Url.Content("~/Assets/images/loading.gif"))" border="0" alt="loading" /></div>
			<div id="connectionsuccess" class="success alert hidden">
				<h2>Success!</h2>
				<p>The database connection is was successful.</p>
			</div>

			<div id="connectionfailure" class="failure alert hidden">
				<h2>Failure!</h2>
				<p>Unable to connect: <span class="errormessage"></span></p>
			</div>
		</div>
		
	</fieldset>

	<div>
		<div class="previous">@Html.ActionLink("< Back", "Index")</div>
	
		<div class="continue">
			<input type="submit" value="Next" class="button next" />
		</div>
	</div>
}