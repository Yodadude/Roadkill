@{ 
	ViewBag.Title = "Site tools";
}
<h1>Tools</h1>

@Html.Partial("SettingsMenu")

<script type="text/javascript">
	$(document).ready(function ()
	{
		$("#settingscontainer a.refreshlink").click(function ()
		{
			$("#wait").modal({ close: false });
		});
	});
</script>

<span class="bold" style="color:green">@TempData["Message"]</span>

<div id="settingscontainer">
	<p>
	<b>@Html.ActionLink("Clear the database", "ClearPages", null, new { @class = "refreshlink" })</b><br />
	Clears all pages and text from the database. This does not remove any users.
	</p>

	<p>
	<b>@Html.ActionLink("Rebuild search index", "UpdateSearchIndex", null, new { @class = "refreshlink" })</b><br />
	Forces a re-build of the page search index, useful if the search begins to get out of sync for any reason.
	</p>

	<p>
	<b>@Html.ActionLink("Export to XML", "ExportAsXml")</b><br />
	Exports all page text content and all history as a single XML file.
	</p>

	<p>
	<b>@Html.ActionLink("Export all content as a zip", "ExportAsWikiFiles")</b><br />
	Exports all pages, including text content as a series of ".wiki" files. Only
	the current content and tags are included, no history is provided. This zip file does not include the attachments folder.
	</p>

	<p>
	<b>@Html.ActionLink("Export attachments as a zip", "ExportAttachments")</b><br />
	Exports all the contents of attachments folder and subfolders as a zip file.
	</p>
	<br /><br />

	<span class="bold borderbottom">Import from screwturn</span><br />
	<p>
	Imports all content from a Screwturn 2 database. You will need to set the markuptype to MediaWiki 
	in the settings/web.config file for the format to be compatible. As screwturn uses as variation on 
	the mediawiki syntax, some content will not render perfectly. This includes some images and links.
	</p>

	@using (Html.BeginForm("ImportFromScrewTurn","Settings"))
	{
	<b>Screwturn connection string:</b>
	@(Html.TextBox("screwturnConnectionString", null, new { style = "width:30em" }))<br />
	<input type="submit" class="button" value="Import" />
	}
	<br /><br />

	<span class="bold borderbottom">Rename a tag</span><br />
	<p>
	This will rename a tag, and update all pages that reference the tag to use the new tagname. The tagname is case sensitive.
	</p>

	@using (Html.BeginForm("RenameTag","Settings"))
	{
	<div class="left bold" style="width:150px;">Existing tag:</div>
	<div class="left">@(Html.TextBox("oldTagName", null, new { style = "width:100px" }))</div>
	<br class="clear" />
	 
	<div class="left bold" style="width:150px;">New tag name:</div>
	<div class="left">@(Html.TextBox("newTagName", null, new { style = "width:100px" }))</div>
	<br class="clear" />
	<input type="submit" class="button" value="Rename" />
	}
</div>

<div id="wait" class="hidden" style="background-color:#333;width:100px;text-align:center;">
	<img src="@(Url.Content("~/Assets/images/loadinglarge.gif"))" border="0" />
</div>